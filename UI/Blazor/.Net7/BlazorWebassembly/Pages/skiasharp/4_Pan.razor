@page "/skiasharp/pan"
@using SkiaSharp
@using SkiaSharp.Views.Blazor
@attribute [RoutePriority(4)]

<div class="container">
    <div class="row">
        <div class="col border rounded p-2 canvas-container">

            <SKCanvasView @ref="skiaView" OnPaintSurface="OnPaintSurface"
                          IgnorePixelScaling="false"
                          @onmousemove="OnMouseMove"
                          @onmousedown="OnMouseDown"
                          @onmouseup="OnMouseUp"
                          />

        </div>
    </div>
</div>

@code
{
    SKCanvasView skiaView = null!;
    SKPoint? touchLocation;
    private Viewport viewport = null!;

    void OnPaintSurface(SKPaintSurfaceEventArgs e)
    {
        Console.WriteLine("OnPaintSurface");

        SKSurface surface = e.Surface;
        SKCanvas canvas = surface.Canvas;
        canvas.Clear(SKColors.White);

        if (viewport == null)
        {
            Console.WriteLine("Canvas Size:" + "Width:" + e.Info.Size.Width + " Height:" + e.Info.Size.Height);

            Console.WriteLine("Dpi:" + skiaView.Dpi);

            viewport = new Viewport(e.Info.Size, (float)skiaView.Dpi);

        }

        var matrix = viewport.GetTransformMatrix();

        canvas.SetMatrix(matrix);

        Console.WriteLine($"matrix scaleX:{matrix.ScaleX} scaleY:{matrix.ScaleY} transX:{matrix.TransX} transY:{matrix.TransY}");

        // 在这里绘制你的内容
        // 例如：
        using (SKPaint paint = new SKPaint { Color = SKColors.Blue })
        {
            canvas.DrawCircle(0, 0, 100, paint);

            paint.Color = new SKColor(255, 0, 0);

            canvas.DrawCircle(200, 200, 2, paint);
        }

    }

    void OnMouseMove(MouseEventArgs e)
    {
        var screenPoint = new SKPoint((float)e.OffsetX, (float)e.OffsetY);

        var woldPoint = viewport.ScreenToWorld(screenPoint);

        //打印坐标
        Console.WriteLine($"mouse x:{e.OffsetX} y:{e.OffsetY} . world x:{woldPoint.X} y:{woldPoint.Y}");

        if (touchLocation == null)
            return;

        float dx =(float) e.OffsetX - touchLocation.Value.X;
        float dy = (float) e.OffsetY - touchLocation.Value.Y;

        viewport.Pan(dx, dy);

        touchLocation = new SKPoint((float)e.OffsetX, (float)e.OffsetY);

        skiaView.Invalidate(); // 触发重绘

    }

    void OnMouseDown(MouseEventArgs e)
    {
        touchLocation = new SKPoint((float)e.OffsetX, (float)e.OffsetY);
    }

    void OnMouseUp(MouseEventArgs e)
    {
        touchLocation = null;
    }

}

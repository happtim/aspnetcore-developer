<div class="container">
    @if (CanDelete)
    {
        <div class="delete">
            <DeleteButton OnClick="@OnDeleteWidget"/>
        </div>
    }
    <DynamicComponent Type="@GetWidgetType()" Parameters="@_parameters" />
</div>

@code{

    [Parameter] public required string Id { get; set; }

    [Parameter] public bool CanDelete { get; set; }

    [Parameter] public EventCallback<string> OnDelete { get; set; }

    private Dictionary<string, object> _parameters => new Dictionary<string, object>
    {
        { nameof(ValueAppWidget.Value), Id }
    };

    private async Task OnDeleteWidget()
    {
        Console.WriteLine($"Delete {Id}");

        await OnDelete.InvokeAsync(Id);
    }

    private Type GetWidgetType()
    {
        return typeof(ValueAppWidget);
    }
}
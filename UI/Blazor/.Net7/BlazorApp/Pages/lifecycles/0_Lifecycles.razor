<h3>_0_Lifecycles</h3>

@* 在 Blazor 中，父组件和子组件的初始化和渲染顺序遵循一定的规律。以下是大致的顺序：

1. 父组件构造函数
2. 父组件 OnInitialized/OnInitializedAsync
3. 父组件 OnParametersSet/OnParametersSetAsync
4. 子组件构造函数
5. 子组件 OnInitialized/OnInitializedAsync
6. 子组件 OnParametersSet/OnParametersSetAsync
7. 子组件 BuildRenderTree (渲染)
8. 父组件 BuildRenderTree (渲染)
9. 子组件 OnAfterRender/OnAfterRenderAsync
10. 父组件 OnAfterRender/OnAfterRenderAsync

需要注意以下几点：

1. 构造函数总是最先被调用。

2. OnInitialized 和 OnInitializedAsync 方法只在组件首次初始化时调用一次。

3. OnParametersSet 和 OnParametersSetAsync 在组件参数设置或更新时调用。

4. BuildRenderTree 方法负责渲染组件的 UI。

5. OnAfterRender 和 OnAfterRenderAsync 在组件渲染到 DOM 后调用。

6. 如果父组件包含多个子组件，所有子组件的初始化和渲染会在父组件的 BuildRenderTree 之前完成。

7. 异步方法（如 OnInitializedAsync）可能会改变这个顺序，因为它们可能在其他操作完成之前就返回。

8. 在后续的更新中，只有 OnParametersSet/OnParametersSetAsync、BuildRenderTree 和 OnAfterRender/OnAfterRenderAsync 会被重复调用。

理解这个顺序对于正确管理组件的生命周期和处理组件间的交互非常重要。例如，如果你需要在子组件完全初始化后在父组件中执行某些操作，你应该在父组件的 OnAfterRender 方法中进行。 
*@

@code {

}
